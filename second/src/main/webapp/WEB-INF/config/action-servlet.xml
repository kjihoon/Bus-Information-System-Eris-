<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	  http://www.springframework.org/schema/task 
	  http://www.springframework.org/schema/task/spring-task-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- HandlerMethodArgumentResolver를 상속받는 CustomMapArgumentResolver 등록 -->
	<annotation-driven>
		<argument-resolvers>
			<beans:bean	class="second.common.resolver.CustomMapArgumentResolver">
			</beans:bean>
		</argument-resolvers>
	</annotation-driven>
	<context:component-scan base-package="com.crontab" /> 
	
	<!-- 해당 태그들은 크론탭을 설정에 필요한 태그들 --> 
	<task:scheduler id="jobScheduler" pool-size="10" /> 
	<task:annotation-driven scheduler="jobScheduler" />




	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/jsp/" />
		<beans:property name="suffix" value=".jsp" />  
	
	</beans:bean>



	<interceptors>
		<interceptor>
			<mapping path="/**" />
			<beans:bean id="loggerInterceptor"
				class="second.common.logger.LoggerInterceptor"></beans:bean>
		</interceptor>
		
 		<!-- <interceptor>
			<mapping path="/admin/**" />
			<beans:bean id="loginInterceptor_admin"
				class="second.common.logger.LoginInterceptor_admin"></beans:bean>
		</interceptor>
		<interceptor>
			<mapping path="/driver/**" />
			<beans:bean id="loginInterceptor_driver"
				class="second.common.logger.LoginInterceptor_driver"></beans:bean>
		</interceptor>
 -->		
	</interceptors>
	<context:component-scan base-package="second" />


</beans:beans>